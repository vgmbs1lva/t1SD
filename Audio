import zmq
import pyaudio
import threading

class AudioStream:
    def __init__(self, broker_ip):
        self.context = zmq.Context()

        # Sockets PUB para enviar dados de áudio
        self.audio_pub = self.context.socket(zmq.PUB)
        self.audio_pub.connect(f"tcp://{broker_ip}:5556")

        # Sockets SUB para receber dados de áudio
        self.audio_sub = self.context.socket(zmq.SUB)
        self.audio_sub.connect(f"tcp://{broker_ip}:5557")
        self.audio_sub.setsockopt_string(zmq.SUBSCRIBE, "")

        # Configurações de áudio
        self.p = pyaudio.PyAudio()
        self.stream = self.p.open(format=pyaudio.paInt16,
                                  channels=1,
                                  rate=44100,
                                  input=True,
                                  frames_per_buffer=1024)

    def send_audio(self):
        while True:
            data = self.stream.read(1024)
            self.audio_pub.send(data)

    def receive_audio(self):
        p = pyaudio.PyAudio()
        stream = p.open(format=pyaudio.paInt16,
                        channels=1,
                        rate=44100,
                        output=True)
        while True:
            data = self.audio_sub.recv()
            stream.write(data)

    def start(self):
        send_thread = threading.Thread(target=self.send_audio)
        receive_thread = threading.Thread(target=self.receive_audio)
        send_thread.start()
        receive_thread.start()

if __name__ == "__main__":
    broker_ip = "189.100.68.70"  # Use o endereço IP interno para testes locais
    audio_stream = AudioStream(broker_ip=broker_ip)
    audio_stream.start()
