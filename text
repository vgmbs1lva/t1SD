import zmq
import threading
import time

class TextStream:
    def __init__(self, broker_ip):
        self.context = zmq.Context()

        # Sockets PUB para enviar dados de texto
        self.text_pub = self.context.socket(zmq.PUB)
        self.text_pub.connect(f"tcp://{broker_ip}:5560")

        # Sockets SUB para receber dados de texto
        self.text_sub = self.context.socket(zmq.SUB)
        self.text_sub.connect(f"tcp://{broker_ip}:5561")
        self.text_sub.setsockopt_string(zmq.SUBSCRIBE, "")

    def send_text(self):
        while True:
            message = input("Digite sua mensagem: ")
            print(f"Enviando mensagem: {message}")
            self.text_pub.send_string(message)
            time.sleep(0.1)  # Pequena pausa para garantir que a mensagem seja publicada

    def receive_text(self):
        while True:
            try:
                message = self.text_sub.recv_string(flags=zmq.NOBLOCK)
                print(f"Nova mensagem recebida: {message}")
            except zmq.Again:
                time.sleep(0.1)

    def start(self):
        send_thread = threading.Thread(target=self.send_text)
        receive_thread = threading.Thread(target=self.receive_text)
        send_thread.start()
        receive_thread.start()

if __name__ == "__main__":
    broker_ip = "189.100.68.70"  # Use o endere√ßo IP interno para testes locais
    text_stream = TextStream(broker_ip=broker_ip)
    text_stream.start()
